x$type_uvc %<>% str_to_lower()
for(i in seq_along(unwanted_array)){
x$type_uvc <- gsub(names(unwanted_array)[i],unwanted_array[i], x$type_uvc)
}
x$type_uvc <- gsub(pattern = "pelagicos|pelagico",           replacement = "pelagico", x$type_uvc)
x$type_uvc <- gsub(pattern = "cocho|censo arrecifal|arrecifal|monitoreo|transect",  replacement = "lineal_transect", x$type_uvc)
x$type_uvc <- gsub(pattern = "buceo errante",           replacement = "buceo_errante", x$type_uvc)
}
# 1.6 seleccionando columnas de interes
x <- x[ , c("year", "month", "day", "date", "date_format", "locality", "sites", "ID_transect", "depth_m", "type_uvc", "area_uvc", "environment","taxa", "size_cm", "abundance", "observer")]
x$year %>% unique
# Chunk 1: setup
# clean up
rm(list=ls())
x <- c("dplyr", "tidyr", "magrittr", "purrr", "lubridate", "stringr", "stringi", "forcats", "pbapply", "readxl",
# "xlsx",
"ggplot2", "GGally", "gridExtra", "grid",
#"Cairo",
"extrafont", "RColorBrewer", "viridis", "DT", "raster", "rgdal", "sf", "rgeos", "cluster", "rfishbase", "taxize", "wdpar", "networkD3", "htmlwidgets", "leaflet", "warbleR", "maps", "timeperiodsR", "ncdf4")
aa <- lapply(x, function(y) {
if(!y %in% installed.packages()[,"Package"])  {if(!y %in% c("warbleR", "Rraven")) install.packages(y) else devtools::install_github(paste0("maRce10/", y))
}
try(require(y, character.only = T), silent = T)
})
rm(aa,
x)
# Chunk 2: call uvcs
##-----llamando las hojas de datos de campo  para unificarlos en una sola base de datos
# extrayendo nombres de los archivos de monitoreo
file_names <- list.files("data_raw/monitoreo",
# recursive = TRUE,
full.names = TRUE)
# extrayendo las hojas de peces
file_names <- file_names[grep("peces|csv", file_names)]
### excel
file_names_excel <- list.files(path = "data_raw/monitoreo", pattern = "\\.xls", full.names = TRUE)
# extrayendo las hojas de peces
file_names_excel <- file_names_excel[grep("peces", ignore.case = TRUE,  file_names_excel)] %>% sort
# viendo los nombres de las hojas de excel para extraer la de los datos de censos
sheets <- lapply(file_names_excel, excel_sheets)
sheets <- lapply(sheets, function(x) grep("Peces|DATA", x))
## leyendo los archivos de excel y uniendolos en una lista
files_excel_l <- list()
for (i in 1:length(file_names_excel)) {
if (sheets[i] != "integer(0)") {
files_excel_df <- read_excel(file_names_excel[i], sheet = sheets[i] %>% as.integer()) %>% as.data.frame()} else
files_excel_df <- read_excel(file_names_excel[i]) %>% as.data.frame()
# uniendo las listas
files_excel_l[[paste0(i)]] <- files_excel_df
}
# cambiando el nombre de las hojas dentro de la lista
listNames <- vector()
for(i in 1:length(file_names_excel)){
name <- strsplit(file_names_excel[i], "\\/")[[1]][3]
listNames <- rbind(name, listNames) %>% sort %>% unique
}
names(files_excel_l) <- listNames
### csv
file_names_csv <- list.files(path = "data_raw/monitoreo", pattern = "\\.csv", full.names = TRUE) %>% sort()
## leyendo los archivos en csv y uniendolos en una lista
files_csv_l <- list()
for (i in 1:length(file_names_csv)) {
files_csv_df <- read.csv(file_names_csv[i], header = TRUE, sep = ";") %>% as.data.frame()
# uniendo las listas
files_csv_l[[paste0(i)]] <- files_csv_df
}
# cambiando el nombre de los dataframes dentro de la lista
listNames <- vector()
for(i in 1:length(file_names_csv)){
name <- strsplit(file_names_csv[i], "\\/")[[1]][3]
listNames <- rbind(name, listNames) %>% sort() %>% unique()
}
names(files_csv_l) <- listNames
## unificando
fishes_l <- c(files_excel_l, files_csv_l)
names(fishes_l)
# limpiando objetos intermedios
rm("file_names",
"file_names_csv",
"file_names_excel",
"files_csv_df",
"files_csv_l",
"files_excel_df",
"files_excel_l",
"i",
"listNames",
"name",
"sheets")
# Chunk 3: uvc column names standarization
# seleccionando las bases de datos con nombres de columnas no informativas
incorrect_colnames <- lapply(fishes_l, function(x) grep("^cm", colnames(x))) != 0
incorrect_colnames <-  incorrect_colnames[!names(incorrect_colnames) %in% names(incorrect_colnames[-incorrect_colnames %>% is.na()])] %>% names %>% as.character()
# extrayendo el area_uvc para los que la tienen en la fila superior
area_uvc_l <- lapply(fishes_l[incorrect_colnames], function(x) {
area <- colnames(x)[grep("^Area", names(x)) + 2] %>% as.integer()
if (length(area) == 0) NA else area
})
area_uvc <- do.call(rbind, area_uvc_l) %>% as.data.frame()
names(area_uvc) <- "area_uvc"
area_uvc$dataset <- row.names(area_uvc)
rownames(area_uvc) <- 1:nrow(area_uvc)
# asignando nombre de columnas a la fila correcta
fishes_l_correct_colnames <- lapply(fishes_l[incorrect_colnames], function(x) {
# seleccionando la fila que tiene los nombres de columnas
names(x) <- x[1,] %>% as.character()
# eliminando las filas que no tienen info
x <- x[-1, ]
})
# corroborando que el nombre de columna se encuentra asignado en la fila correcta
# lapply(fishes_l_correct_colnames, colnames)
# pegando las bases de datos con columnas corregidas al resto
fishes_l <- c(fishes_l_correct_colnames, fishes_l[!names(fishes_l) %in% names(fishes_l_correct_colnames)])
# Chunk 4: uvc correcciones a mano
# lapply(fishes_l, colnames)
# eliminando columna de tamano 700
# fishes_l$culebra_julio2021_peces$`700` %>% summary    # todas deben ser NA
# fishes_l$isladelcoco_mayo2021_peces$`700` %>% summary # todas deben ser NA
# fishes_l$`2021-03_gira_culebra_ peces_Andrea_Arriaga.xlsx`$`700` %>% summary # todas deben ser NA
# fishes_l$golfodulce_enerofebrero2020_peces$`700`  %>% summary # todas deben ser NA
fishes_l$isladelcoco_mayo2021_peces.xlsx$`700` <- NULL
fishes_l$`2021-03_gira_culebra_ peces_Andrea_Arriaga.xlsx`$`700` <- NULL
fishes_l$golfodulce_enerofebrero2020_peces.xlsx$`700` <- NULL
# corrigiendo culebra_julio2021_peces.xls.NA
fishes_l$culebra_julio2021_peces.xls$year <- NULL
fishes_l$culebra_julio2021_peces.xls$year <- "2021" %>% as.numeric()
fishes_l$culebra_julio2021_peces.xls$month <- NULL
fishes_l$culebra_julio2021_peces.xls$month <- 7 %>% as.numeric()
fishes_l$culebra_julio2021_peces.xls$`700`    <- NULL
# corrigiendo fecha de base_peces_vertical_hasta_julio2019
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$day <- NA
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$date <- NULL
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$locality <- "bahia_culebra"
# fishes_l$Peces_ACOSA2017.xls$abund %>% unique()
fishes_l$Peces_ACOSA2017.xls$abund <- NULL # porque esta columna solo contiene NAs
# corrigiendo fecha de Peces_CI-CIMAR ACMIC 2016.xlsx
a <- as.Date(fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Fecha[fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes %>% is.na] %>% as.numeric(), origin = "1899-12-30")
fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes[fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes %>% is.na] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][2], USE.NAMES = FALSE)
# eliminando muestreos que no se van a incluir en los datos compartidos por inconsistencias en el metodo de censo. Segun reunion con Chepe 2022-05-16
fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx` <- fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`[!fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$tipo == "Brasileños" ,]
fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx` <- fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`[!fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`$Año == "1995", ]
fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx` <- fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`[!fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`$Año == "1996", ]
# corrigiendo fecha de Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx
a <- as.Date(fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] %>% as.numeric(), origin = "1899-12-30")
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][1], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][2], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][3], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <- paste(fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], sep = "/")
# limpiando objetos intermedios
rm(area_uvc,
area_uvc_l,
fishes_l_correct_colnames,
incorrect_colnames,
a)
# 1.  cambiando los datos de formato ancho a largo
# seleccionando las bases de datos formato ancho lab chepe
fishes_l_formatochepe <- lapply(fishes_l, function(x) grep("^45$", colnames(x))) != 0
fishes_l_formatochepe <-  fishes_l_formatochepe[!names(fishes_l_formatochepe) %in% names(fishes_l_formatochepe[-fishes_l_formatochepe %>% is.na()])] %>% names %>% as.character()
# 1.2 cambiando los datos de abundancias de formato ancho a formato largo
fishes_l_longformat <- lapply(fishes_l[fishes_l_formatochepe], function(x) {
x %<>%
gather(size_cm, Value,
"2.5",
"7.5",
"12.5",
"17.5",
"25",
"35",
"45",
"55",
"65",
"75",
"85",
"95",
"112.5",
"137.5",
"162.5",
"187.5",
"225",
"275",
"325" )
})
# pegando las bases de datos con formato largo al resto
fishes_l <- c(fishes_l_longformat, fishes_l[!names(fishes_l) %in% names(fishes_l_longformat)])
fishes_l$culebra_julio2021_peces.xlsx$year %>% unique
# Chunk 1: setup
# clean up
rm(list=ls())
x <- c("dplyr", "tidyr", "magrittr", "purrr", "lubridate", "stringr", "stringi", "forcats", "pbapply", "readxl",
# "xlsx",
"ggplot2", "GGally", "gridExtra", "grid",
#"Cairo",
"extrafont", "RColorBrewer", "viridis", "DT", "raster", "rgdal", "sf", "rgeos", "cluster", "rfishbase", "taxize", "wdpar", "networkD3", "htmlwidgets", "leaflet", "warbleR", "maps", "timeperiodsR", "ncdf4")
aa <- lapply(x, function(y) {
if(!y %in% installed.packages()[,"Package"])  {if(!y %in% c("warbleR", "Rraven")) install.packages(y) else devtools::install_github(paste0("maRce10/", y))
}
try(require(y, character.only = T), silent = T)
})
rm(aa,
x)
# Chunk 2: call uvcs
##-----llamando las hojas de datos de campo  para unificarlos en una sola base de datos
# extrayendo nombres de los archivos de monitoreo
file_names <- list.files("data_raw/monitoreo",
# recursive = TRUE,
full.names = TRUE)
# extrayendo las hojas de peces
file_names <- file_names[grep("peces|csv", file_names)]
### excel
file_names_excel <- list.files(path = "data_raw/monitoreo", pattern = "\\.xls", full.names = TRUE)
# extrayendo las hojas de peces
file_names_excel <- file_names_excel[grep("peces", ignore.case = TRUE,  file_names_excel)] %>% sort
# viendo los nombres de las hojas de excel para extraer la de los datos de censos
sheets <- lapply(file_names_excel, excel_sheets)
sheets <- lapply(sheets, function(x) grep("Peces|DATA", x))
## leyendo los archivos de excel y uniendolos en una lista
files_excel_l <- list()
for (i in 1:length(file_names_excel)) {
if (sheets[i] != "integer(0)") {
files_excel_df <- read_excel(file_names_excel[i], sheet = sheets[i] %>% as.integer()) %>% as.data.frame()} else
files_excel_df <- read_excel(file_names_excel[i]) %>% as.data.frame()
# uniendo las listas
files_excel_l[[paste0(i)]] <- files_excel_df
}
# cambiando el nombre de las hojas dentro de la lista
listNames <- vector()
for(i in 1:length(file_names_excel)){
name <- strsplit(file_names_excel[i], "\\/")[[1]][3]
listNames <- rbind(name, listNames) %>% sort %>% unique
}
names(files_excel_l) <- listNames
### csv
file_names_csv <- list.files(path = "data_raw/monitoreo", pattern = "\\.csv", full.names = TRUE) %>% sort()
## leyendo los archivos en csv y uniendolos en una lista
files_csv_l <- list()
for (i in 1:length(file_names_csv)) {
files_csv_df <- read.csv(file_names_csv[i], header = TRUE, sep = ";") %>% as.data.frame()
# uniendo las listas
files_csv_l[[paste0(i)]] <- files_csv_df
}
# cambiando el nombre de los dataframes dentro de la lista
listNames <- vector()
for(i in 1:length(file_names_csv)){
name <- strsplit(file_names_csv[i], "\\/")[[1]][3]
listNames <- rbind(name, listNames) %>% sort() %>% unique()
}
names(files_csv_l) <- listNames
## unificando
fishes_l <- c(files_excel_l, files_csv_l)
names(fishes_l)
# limpiando objetos intermedios
rm("file_names",
"file_names_csv",
"file_names_excel",
"files_csv_df",
"files_csv_l",
"files_excel_df",
"files_excel_l",
"i",
"listNames",
"name",
"sheets")
# Chunk 3: uvc column names standarization
# seleccionando las bases de datos con nombres de columnas no informativas
incorrect_colnames <- lapply(fishes_l, function(x) grep("^cm", colnames(x))) != 0
incorrect_colnames <-  incorrect_colnames[!names(incorrect_colnames) %in% names(incorrect_colnames[-incorrect_colnames %>% is.na()])] %>% names %>% as.character()
# extrayendo el area_uvc para los que la tienen en la fila superior
area_uvc_l <- lapply(fishes_l[incorrect_colnames], function(x) {
area <- colnames(x)[grep("^Area", names(x)) + 2] %>% as.integer()
if (length(area) == 0) NA else area
})
area_uvc <- do.call(rbind, area_uvc_l) %>% as.data.frame()
names(area_uvc) <- "area_uvc"
area_uvc$dataset <- row.names(area_uvc)
rownames(area_uvc) <- 1:nrow(area_uvc)
# asignando nombre de columnas a la fila correcta
fishes_l_correct_colnames <- lapply(fishes_l[incorrect_colnames], function(x) {
# seleccionando la fila que tiene los nombres de columnas
names(x) <- x[1,] %>% as.character()
# eliminando las filas que no tienen info
x <- x[-1, ]
})
# corroborando que el nombre de columna se encuentra asignado en la fila correcta
# lapply(fishes_l_correct_colnames, colnames)
# pegando las bases de datos con columnas corregidas al resto
fishes_l <- c(fishes_l_correct_colnames, fishes_l[!names(fishes_l) %in% names(fishes_l_correct_colnames)])
# Chunk 4: uvc correcciones a mano
# lapply(fishes_l, colnames)
# eliminando columna de tamano 700
# fishes_l$culebra_julio2021_peces$`700` %>% summary    # todas deben ser NA
# fishes_l$isladelcoco_mayo2021_peces$`700` %>% summary # todas deben ser NA
# fishes_l$`2021-03_gira_culebra_ peces_Andrea_Arriaga.xlsx`$`700` %>% summary # todas deben ser NA
# fishes_l$golfodulce_enerofebrero2020_peces$`700`  %>% summary # todas deben ser NA
fishes_l$isladelcoco_mayo2021_peces.xlsx$`700` <- NULL
fishes_l$`2021-03_gira_culebra_ peces_Andrea_Arriaga.xlsx`$`700` <- NULL
fishes_l$golfodulce_enerofebrero2020_peces.xlsx$`700` <- NULL
# corrigiendo culebra_julio2021_peces.xls.NA
fishes_l$culebra_julio2021_peces.xls$year <- NULL
fishes_l$culebra_julio2021_peces.xls$year <- "2021" %>% as.numeric()
fishes_l$culebra_julio2021_peces.xls$month <- NULL
fishes_l$culebra_julio2021_peces.xls$month <- 7 %>% as.numeric()
fishes_l$culebra_julio2021_peces.xls$`700`    <- NULL
# corrigiendo fecha de base_peces_vertical_hasta_julio2019
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$day <- NA
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$date <- NULL
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$locality <- "bahia_culebra"
# fishes_l$Peces_ACOSA2017.xls$abund %>% unique()
fishes_l$Peces_ACOSA2017.xls$abund <- NULL # porque esta columna solo contiene NAs
# corrigiendo fecha de Peces_CI-CIMAR ACMIC 2016.xlsx
a <- as.Date(fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Fecha[fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes %>% is.na] %>% as.numeric(), origin = "1899-12-30")
fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes[fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes %>% is.na] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][2], USE.NAMES = FALSE)
# eliminando muestreos que no se van a incluir en los datos compartidos por inconsistencias en el metodo de censo. Segun reunion con Chepe 2022-05-16
fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx` <- fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`[!fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$tipo == "Brasileños" ,]
fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx` <- fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`[!fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`$Año == "1995", ]
fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx` <- fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`[!fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`$Año == "1996", ]
# corrigiendo fecha de Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx
a <- as.Date(fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] %>% as.numeric(), origin = "1899-12-30")
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][1], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][2], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][3], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <- paste(fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], sep = "/")
# limpiando objetos intermedios
rm(area_uvc,
area_uvc_l,
fishes_l_correct_colnames,
incorrect_colnames,
a)
fishes_l$culebra_julio2021_peces.xlsx$year %>% unique
# Chunk 1: setup
# clean up
rm(list=ls())
x <- c("dplyr", "tidyr", "magrittr", "purrr", "lubridate", "stringr", "stringi", "forcats", "pbapply", "readxl",
# "xlsx",
"ggplot2", "GGally", "gridExtra", "grid",
#"Cairo",
"extrafont", "RColorBrewer", "viridis", "DT", "raster", "rgdal", "sf", "rgeos", "cluster", "rfishbase", "taxize", "wdpar", "networkD3", "htmlwidgets", "leaflet", "warbleR", "maps", "timeperiodsR", "ncdf4")
aa <- lapply(x, function(y) {
if(!y %in% installed.packages()[,"Package"])  {if(!y %in% c("warbleR", "Rraven")) install.packages(y) else devtools::install_github(paste0("maRce10/", y))
}
try(require(y, character.only = T), silent = T)
})
rm(aa,
x)
# Chunk 2: call uvcs
##-----llamando las hojas de datos de campo  para unificarlos en una sola base de datos
# extrayendo nombres de los archivos de monitoreo
file_names <- list.files("data_raw/monitoreo",
# recursive = TRUE,
full.names = TRUE)
# extrayendo las hojas de peces
file_names <- file_names[grep("peces|csv", file_names)]
### excel
file_names_excel <- list.files(path = "data_raw/monitoreo", pattern = "\\.xls", full.names = TRUE)
# extrayendo las hojas de peces
file_names_excel <- file_names_excel[grep("peces", ignore.case = TRUE,  file_names_excel)] %>% sort
# viendo los nombres de las hojas de excel para extraer la de los datos de censos
sheets <- lapply(file_names_excel, excel_sheets)
sheets <- lapply(sheets, function(x) grep("Peces|DATA", x))
## leyendo los archivos de excel y uniendolos en una lista
files_excel_l <- list()
for (i in 1:length(file_names_excel)) {
if (sheets[i] != "integer(0)") {
files_excel_df <- read_excel(file_names_excel[i], sheet = sheets[i] %>% as.integer()) %>% as.data.frame()} else
files_excel_df <- read_excel(file_names_excel[i]) %>% as.data.frame()
# uniendo las listas
files_excel_l[[paste0(i)]] <- files_excel_df
}
# cambiando el nombre de las hojas dentro de la lista
listNames <- vector()
for(i in 1:length(file_names_excel)){
name <- strsplit(file_names_excel[i], "\\/")[[1]][3]
listNames <- rbind(name, listNames) %>% sort %>% unique
}
names(files_excel_l) <- listNames
### csv
file_names_csv <- list.files(path = "data_raw/monitoreo", pattern = "\\.csv", full.names = TRUE) %>% sort()
## leyendo los archivos en csv y uniendolos en una lista
files_csv_l <- list()
for (i in 1:length(file_names_csv)) {
files_csv_df <- read.csv(file_names_csv[i], header = TRUE, sep = ";") %>% as.data.frame()
# uniendo las listas
files_csv_l[[paste0(i)]] <- files_csv_df
}
# cambiando el nombre de los dataframes dentro de la lista
listNames <- vector()
for(i in 1:length(file_names_csv)){
name <- strsplit(file_names_csv[i], "\\/")[[1]][3]
listNames <- rbind(name, listNames) %>% sort() %>% unique()
}
names(files_csv_l) <- listNames
## unificando
fishes_l <- c(files_excel_l, files_csv_l)
names(fishes_l)
# limpiando objetos intermedios
rm("file_names",
"file_names_csv",
"file_names_excel",
"files_csv_df",
"files_csv_l",
"files_excel_df",
"files_excel_l",
"i",
"listNames",
"name",
"sheets")
# Chunk 3: uvc column names standarization
# seleccionando las bases de datos con nombres de columnas no informativas
incorrect_colnames <- lapply(fishes_l, function(x) grep("^cm", colnames(x))) != 0
incorrect_colnames <-  incorrect_colnames[!names(incorrect_colnames) %in% names(incorrect_colnames[-incorrect_colnames %>% is.na()])] %>% names %>% as.character()
# extrayendo el area_uvc para los que la tienen en la fila superior
area_uvc_l <- lapply(fishes_l[incorrect_colnames], function(x) {
area <- colnames(x)[grep("^Area", names(x)) + 2] %>% as.integer()
if (length(area) == 0) NA else area
})
area_uvc <- do.call(rbind, area_uvc_l) %>% as.data.frame()
names(area_uvc) <- "area_uvc"
area_uvc$dataset <- row.names(area_uvc)
rownames(area_uvc) <- 1:nrow(area_uvc)
# asignando nombre de columnas a la fila correcta
fishes_l_correct_colnames <- lapply(fishes_l[incorrect_colnames], function(x) {
# seleccionando la fila que tiene los nombres de columnas
names(x) <- x[1,] %>% as.character()
# eliminando las filas que no tienen info
x <- x[-1, ]
})
# corroborando que el nombre de columna se encuentra asignado en la fila correcta
# lapply(fishes_l_correct_colnames, colnames)
# pegando las bases de datos con columnas corregidas al resto
fishes_l <- c(fishes_l_correct_colnames, fishes_l[!names(fishes_l) %in% names(fishes_l_correct_colnames)])
# Chunk 4: uvc correcciones a mano
# lapply(fishes_l, colnames)
# eliminando columna de tamano 700
# fishes_l$culebra_julio2021_peces$`700` %>% summary    # todas deben ser NA
# fishes_l$isladelcoco_mayo2021_peces$`700` %>% summary # todas deben ser NA
# fishes_l$`2021-03_gira_culebra_ peces_Andrea_Arriaga.xlsx`$`700` %>% summary # todas deben ser NA
# fishes_l$golfodulce_enerofebrero2020_peces$`700`  %>% summary # todas deben ser NA
fishes_l$isladelcoco_mayo2021_peces.xlsx$`700` <- NULL
fishes_l$`2021-03_gira_culebra_ peces_Andrea_Arriaga.xlsx`$`700` <- NULL
fishes_l$golfodulce_enerofebrero2020_peces.xlsx$`700` <- NULL
# corrigiendo culebra_julio2021_peces.xls.NA
fishes_l$culebra_julio2021_peces.xls$year <- NULL
fishes_l$culebra_julio2021_peces.xls$year <- "2021" %>% as.numeric()
fishes_l$culebra_julio2021_peces.xls$month <- NULL
fishes_l$culebra_julio2021_peces.xls$month <- 7 %>% as.numeric()
fishes_l$culebra_julio2021_peces.xls$`700`    <- NULL
# corrigiendo fecha de base_peces_vertical_hasta_julio2019
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$day <- NA
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$date <- NULL
fishes_l$base_peces_vertical_hasta_julio2019.xlsx$locality <- "bahia_culebra"
# fishes_l$Peces_ACOSA2017.xls$abund %>% unique()
fishes_l$Peces_ACOSA2017.xls$abund <- NULL # porque esta columna solo contiene NAs
# corrigiendo fecha de Peces_CI-CIMAR ACMIC 2016.xlsx
a <- as.Date(fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Fecha[fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes %>% is.na] %>% as.numeric(), origin = "1899-12-30")
fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes[fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$Mes %>% is.na] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][2], USE.NAMES = FALSE)
# eliminando muestreos que no se van a incluir en los datos compartidos por inconsistencias en el metodo de censo. Segun reunion con Chepe 2022-05-16
fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx` <- fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`[!fishes_l$`Peces_CI-CIMAR ACMIC 2016.xlsx`$tipo == "Brasileños" ,]
fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx` <- fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`[!fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`$Año == "1995", ]
fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx` <- fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`[!fishes_l$`ene2020_Tati_Gustavo_BASE DATOS PECES_Bahía Culebra (hasta junio19).xlsx`$Año == "1996", ]
# corrigiendo fecha de Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx
a <- as.Date(fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] %>% as.numeric(), origin = "1899-12-30")
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][1], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][2], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day <- NA
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <-
sapply( a %>% as.character, function(x) strsplit(x, "-")[[1]][3], USE.NAMES = FALSE)
fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)] <- paste(fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$day[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$month[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$year[-grep("/", fishes_l$`Base Datos PECES ACOSA_ACT_ACMIC 2013_2014.xlsx`$Fecha)], sep = "/")
# limpiando objetos intermedios
rm(area_uvc,
area_uvc_l,
fishes_l_correct_colnames,
incorrect_colnames,
a)
fishes_l$culebra_julio2021_peces.xls$year %>% unique
fishes_costa_rica$year[fishes_costa_rica$dataset == "culebra_julio2021_peces.xls"] <- "2021"
# apply(fishes_costa_rica_correct_size_abundance_coords, 2, anyNA)
fishes_costa_rica_correct_size_abundance_coords <- readRDS("data_intermediate/fish/fishes_costa_rica_correct_size_abundance_coords.rds")
fishes_costa_rica_correct_size_abundance_coords$site_date %>% unique
View(fishes_l)
fishes_costa_rica_correct_size_abundance_coords$site_date[fishes_costa_rica_correct_size_abundance_coords$dataset == "CocoTEP.csv"] %>% unique
fishes_costa_rica_correct_size_abundance_coords$site_date[fishes_costa_rica_correct_size_abundance_coords$locality == "isla_del_coco"] %>% unique
fishes_costa_rica_correct_size_abundance_coords$site_date[fishes_costa_rica_correct_size_abundance_coords$locality == "isla_del_coco"] %>% unique %>% sort
fishes_costa_rica_correct_size_abundance_coords$site_date[fishes_costa_rica_correct_size_abundance_coords$locality == "isla_del_coco" & grep("2014", fishes_costa_rica_correct_size_abundance_coords$site_date)] %>% unique %>% sort
fishes_costa_rica_correct_size_abundance_coords$site_date[fishes_costa_rica_correct_size_abundance_coords$locality == "isla_del_coco" && grep("2014", fishes_costa_rica_correct_size_abundance_coords$site_date)] %>% unique %>% sort
fishes_costa_rica_correct_size_abundance_coords$dataset[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date)] %>% unique %>% sort
fishes_costa_rica_correct_size_abundance_coords$site_id[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date)] %>% unique %>% sort
fishes_costa_rica_correct_size_abundance_coords[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date), c("site_id", "dataset")] %>% unique %>% sort
fishes_costa_rica_correct_size_abundance_coords[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date), c("site_id", "dataset")] %>% unique
fishes_costa_rica_correct_size_abundance_coords[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date), c("site_id", "dataset")] %>% unique
fishes_costa_rica_correct_size_abundance_coords[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date), c("site_id", "dataset", "date")] %>% unique
fishes_costa_rica_correct_size_abundance_coords[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date), c("site_id", "dataset", "date")] %>% unique
fishes_costa_rica_correct_size_abundance_coords[grep("2014-11", fishes_costa_rica_correct_size_abundance_coords$site_date), c("dataset","site_id",  "date")] %>% unique
fishes_costa_rica_correct_size_abundance_coords[ fishes_costa_rica_correct_size_abundance_coords$dataset == "CocoTEP", c("site_date")] %>% unique
fishes_costa_rica_correct_size_abundance_coords[ fishes_costa_rica_correct_size_abundance_coords$dataset == "CocoTEP.csv", c("site_date")] %>% unique
aggregate(ID_transect ~ site_date, dat = fishes_costa_rica_correct_size_abundance_coords[ fishes_costa_rica_correct_size_abundance_coords$dataset == "CocoTEP.csv",], FUN = function(x) x %>% unique %>% length())
